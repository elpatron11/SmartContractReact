{"ast":null,"code":"const contractABI = require(\"../contract-abi.json\");\n\nconst contractAddress = \"0x6f3f635A9762B47954229Ea479b4541eAF402A6A\";\nexport const helloWorldContract = new web3.eth.Contract(contractABI, contractAddress);\n\nrequire('dotenv').config();\n\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\n\nconst {\n  createAlchemyWeb3\n} = require(\"@alch/alchemy-web3\");\n\nconst web3 = createAlchemyWeb3(alchemyKey);\nexport const loadCurrentMessage = async () => {\n  const message = await helloWorldContract.methods.message().call();\n  return message;\n};\nexport const connectWallet = async () => {};\nexport const getCurrentWalletConnected = async () => {};\nexport const updateMessage = async (address, message) => {};","map":{"version":3,"sources":["C:/Users/Raul/web2andweb3/starter-files/src/util/interact.js"],"names":["contractABI","require","contractAddress","helloWorldContract","web3","eth","Contract","config","alchemyKey","process","env","REACT_APP_ALCHEMY_KEY","createAlchemyWeb3","loadCurrentMessage","message","methods","call","connectWallet","getCurrentWalletConnected","updateMessage","address"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,sBAAD,CAA3B;;AACA,MAAMC,eAAe,GAAG,4CAAxB;AACA,OAAO,MAAMC,kBAAkB,GAAG,IAAIC,IAAI,CAACC,GAAL,CAASC,QAAb,CAChCN,WADgC,EAEhCE,eAFgC,CAA3B;;AAIPD,OAAO,CAAC,QAAD,CAAP,CAAkBM,MAAlB;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA/B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAwBX,OAAO,CAAC,oBAAD,CAArC;;AACA,MAAMG,IAAI,GAAGQ,iBAAiB,CAACJ,UAAD,CAA9B;AACA,OAAO,MAAMK,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,OAAO,GAAG,MAAMX,kBAAkB,CAACY,OAAnB,CAA2BD,OAA3B,GAAqCE,IAArC,EAAtB;AACA,SAAOF,OAAP;AACD,CAHM;AAKP,OAAO,MAAMG,aAAa,GAAG,YAAY,CAExC,CAFM;AAIP,OAAO,MAAMC,yBAAyB,GAAG,YAAY,CAEpD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,OAAOC,OAAP,EAAgBN,OAAhB,KAA4B,CAExD,CAFM","sourcesContent":["const contractABI = require(\"../contract-abi.json\");\r\nconst contractAddress = \"0x6f3f635A9762B47954229Ea479b4541eAF402A6A\";\r\nexport const helloWorldContract = new web3.eth.Contract(\r\n  contractABI,\r\n  contractAddress\r\n);\r\nrequire('dotenv').config();\r\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nexport const loadCurrentMessage = async () => { \r\n  const message = await helloWorldContract.methods.message().call();\r\n  return message;\r\n};\r\n\r\nexport const connectWallet = async () => {\r\n  \r\n};\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  \r\n};\r\n\r\nexport const updateMessage = async (address, message) => {\r\n  \r\n};\r\n"]},"metadata":{},"sourceType":"module"}